- step:
    name: preprocess
    image: python:3.7
    command:
      - echo "Preprocessing..."
      - mkdir /valohai/outputs/data
      - mkdir /valohai/outputs/labels
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/data/1.csv
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/data/2.csv
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/data/3.csv
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/labels/labels.csv
    parameters:
      - name: lookbehind
        type: integer
        pass-as: --lookbehind={v}
        default: 10
    inputs:
      - name: data
        default: https://bitcoin-demo.s3-eu-west-1.amazonaws.com/ETHEUR_1.csv
- step:
    name: train
    image: python:3.7
    command:
      - echo "Training..."
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/model.pb
    inputs:
      - name: data
      - name: labels
- step:
    name: test
    image: python:3.7
    command:
      - echo "Testing..."
      - mkdir /valohai/outputs/results
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/results/tests.json
    inputs:
      - name: model
      - name: data
      - name: labels
- step:
    name: datapull
    image: python:3.7
    parameters:
      - name: currencypair
        type: string
        pass-as: --currencypair={v}
        default: ETHEUR
    command:
      - echo "Pullingdata..."
      - mkdir /valohai/outputs/data
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/data/{parameter-value:currencypair}.csv
- step:
    name: confirm_deploy
    image: python:3.7
    command:
      - echo "Confirming tests..."
    inputs:
      - name: test_results
      - name: model
- pipeline:
    name: full-pipeline
    nodes:
      - name: preprocess
        type: execution
        step: preprocess
      - name: train
        type: execution
        step: train
      - name: datapull_eth
        type: execution
        step: datapull
      - name: datapull_xrp
        type: execution
        step: datapull
      - name: datapull_ltc
        type: execution
        step: datapull
      - name: preprocess_eth
        type: execution
        step: preprocess
      - name: preprocess_xrp
        type: execution
        step: preprocess
      - name: preprocess_ltc
        type: execution
        step: preprocess
      - name: test_eth
        type: execution
        step: test
      - name: test_xrp
        type: execution
        step: test
      - name: test_ltc
        type: execution
        step: test
      - name: deploy
        type: execution
        step: deploy
      - name: deploy_predictor
        type: deployment
        deployment: mydeployment
        endpoints:
          - predictor
    edges:
      - [preprocess.parameter.lookbehind, preprocess_eth.parameter.lookbehind]
      - [preprocess.parameter.lookbehind, preprocess_xrp.parameter.lookbehind]
      - [preprocess.parameter.lookbehind, preprocess_ltc.parameter.lookbehind]
      - [preprocess.output.data*, train.input.data]
      - [preprocess.output.labels*, train.input.labels]
      - [datapull_eth.output.data*, preprocess_eth.input.data]
      - [datapull_xrp.output.data*, preprocess_xrp.input.data]
      - [datapull_ltc.output.data*, preprocess_ltc.input.data]
      - [preprocess_eth.output.data*, test_eth.input.data]
      - [preprocess_eth.output.labels*, test_eth.input.labels]
      - [preprocess_xrp.output.data*, test_xrp.input.data]
      - [preprocess_xrp.output.labels*, test_xrp.input.labels]
      - [preprocess_ltc.output.data*, test_ltc.input.data]
      - [preprocess_ltc.output.labels*, test_ltc.input.labels]
      - [train.output.model*, test_eth.input.model]
      - [train.output.model*, test_xrp.input.model]
      - [train.output.model*, test_ltc.input.model]
      - [train.output.model*, confirm_deploy.input.model]
      - [test_eth.output.results*, confirm_deploy.input.test_results]
      - [test_xrp.output.results*, confirm_deploy.input.test_results]
      - [test_ltc.output.results*, confirm_deploy.input.test_results]
      - [confirm_deploy.output.model*, deploy_predictor.file.predictor.model]
- endpoint:
    name: predictor
    description: predict volume using recent OHLCV data ("ohlcv" parameter)
    image: tensorflow/tensorflow:1.13.1-py3
    wsgi: predict_wsgi:predict_wsgi
    files:
      - name: model
        description: Trained model
        path: model.pb
