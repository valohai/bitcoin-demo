- step:
    name: preprocess
    image: python:3.7
    command:
      - echo "Preprocessing..."
      - mkdir /valohai/outputs/data
      - mkdir /valohai/outputs/labels
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/data/1.csv
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/data/2.csv
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/data/3.csv
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/labels/labels.csv
    parameters:
      - name: lookbehind
        type: integer
        pass-as: --lookbehind={v}
        default: 10
    inputs:
      - name: data
        default: https://bitcoin-demo.s3-eu-west-1.amazonaws.com/ETHEUR_1.csv
- step:
    name: train
    image: python:3.7
    command:
      - echo "Training..."
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/model.pb
    inputs:
      - name: data
      - name: labels
- step:
    name: datapull
    image: python:3.7
    parameters:
      - name: currencypair
        type: string
        pass-as: --currencypair={v}
        default: ETHEUR
    command:
      - echo "Pullingdata..."
      - mkdir /valohai/outputs/data
      - dd bs=1024 count=1024 </dev/urandom >/valohai/outputs/data/{parameter-value:currencypair}.csv
- step:
    name: train_transfer
    image: python:3.7
    parameters:
      - name: currencypair
        type: string
        pass-as: --currencypair={v}
        default: ETHEUR
    command:
      - echo "Transfer training..."
    inputs:
      - name: model
      - name: data
      - name: labels
- pipeline:
    name: full-pipeline
    nodes:
      - name: preprocess_full
        type: execution
        step: preprocess
      - name: train_full
        type: execution
        step: train
      - name: datapull_eth
        type: execution
        step: datapull
      - name: datapull_xrp
        type: execution
        step: datapull
      - name: datapull_ltc
        type: execution
        step: datapull
      - name: train_eth
        type: execution
        step: train_transfer
      - name: train_xrp
        type: execution
        step: train_transfer
      - name: train_ltc
        type: execution
        step: train_transfer
      - name: preprocess_eth
        type: execution
        step: preprocess
      - name: preprocess_xrp
        type: execution
        step: preprocess
      - name: preprocess_ltc
        type: execution
        step: preprocess
#      - name: deploy_eth
#        type: deployment
#        deployment: mydeployment
#        endpoints:
#          - predict_eth
#      - name: deploy_xrp
#        type: deployment
#        deployment: mydeployment
#        endpoints:
#          - predict_xrp
#      - name: deploy_ltc
#        type: deployment
#        deployment: mydeployment
#        endpoints:
#          - predict_ltc
    edges:
      - [preprocess_full.parameter.lookbehind, preprocess_eth.parameter.lookbehind]
      - [preprocess_full.parameter.lookbehind, preprocess_xrp.parameter.lookbehind]
      - [preprocess_full.parameter.lookbehind, preprocess_ltc.parameter.lookbehind]
      - [preprocess_full.output.data*, train_full.input.data]
      - [preprocess_full.output.labels*, train_full.input.labels]
      - [datapull_eth.output.data*, preprocess_eth.input.data]
      - [datapull_xrp.output.data*, preprocess_xrp.input.data]
      - [datapull_ltc.output.data*, preprocess_ltc.input.data]
      - [preprocess_eth.output.data*, train_eth.input.data]
      - [preprocess_eth.output.labels*, train_eth.input.labels]
      - [train_full.output.model*, train_eth.input.model]
      - [preprocess_xrp.output.data*, train_xrp.input.data]
      - [preprocess_xrp.output.labels*, train_xrp.input.labels]
      - [train_full.output.model*, train_xrp.input.model]
      - [preprocess_ltc.output.data*, train_ltc.input.data]
      - [preprocess_ltc.output.labels*, train_ltc.input.labels]
      - [train_full.output.model*, train_ltc.input.model]
#      - [train_eth.output.model*, deploy_eth.file.predict_eth.model]
#      - [train_xrp.output.model*, deploy_xrp.file.predict_xrp.model]
#      - [train_ltc.output.model*, deploy_ltc.file.predict_ltc.model]
#- endpoint:
#    name: predict_eth
#    description: predict ETH volume using recent OHLCV data ("ohlcv" parameter)
#    image: tensorflow/tensorflow:1.13.1-py3
#    wsgi: predict_wsgi:predict_wsgi
#    files:
#      - name: model
#        description: Trained model
#        path: model.pb
#- endpoint:
#    name: predict_xrp
#    description: predict XRP volume using recent OHLCV data ("ohlcv" parameter)
#    image: tensorflow/tensorflow:1.13.1-py3
#    wsgi: predict_wsgi:predict_wsgi
#    files:
#      - name: model
#        description: Trained model
#        path: model.pb
#- endpoint:
#    name: predict_ltc
#    description: predict LTC volume using recent OHLCV data ("ohlcv" parameter)
#    image: tensorflow/tensorflow:1.13.1-py3
#    wsgi: predict_wsgi:predict_wsgi
#    files:
#      - name: model
#        description: Trained model
#        path: model.pb
- pipeline:
    name: transfer-pipeline
    nodes:
      - name: datapull_eth
        type: execution
        step: datapull
      - name: datapull_xrp
        type: execution
        step: datapull
      - name: datapull_ltc
        type: execution
        step: datapull
      - name: train_eth
        type: execution
        step: train_transfer
      - name: train_xrp
        type: execution
        step: train_transfer
      - name: train_ltc
        type: execution
        step: train_transfer
      - name: preprocess_eth
        type: execution
        step: preprocess
      - name: preprocess_xrp
        type: execution
        step: preprocess
      - name: preprocess_ltc
        type: execution
        step: preprocess
    edges:
      - [datapull_eth.output.data*, preprocess_eth.input.data]
      - [datapull_xrp.output.data*, preprocess_xrp.input.data]
      - [datapull_ltc.output.data*, preprocess_ltc.input.data]
      - [preprocess_eth.output.data*, train_eth.input.data]
      - [preprocess_eth.output.labels*, train_eth.input.labels]
      - [preprocess_xrp.output.data*, train_xrp.input.data]
      - [preprocess_xrp.output.labels*, train_xrp.input.labels]
      - [preprocess_ltc.output.data*, train_ltc.input.data]
      - [preprocess_ltc.output.labels*, train_ltc.input.labels]
      - [train_eth.input.model*, train_xrp.input.model]
      - [train_eth.input.model*, train_ltc.input.model]
#      - [train_eth.output.model*, deploy_eth.file.predict_eth.model]
#      - [train_xrp.output.model*, deploy_xrp.file.predict_xrp.model]
#      - [train_ltc.output.model*, deploy_ltc.file.predict_ltc.model]
#- endpoint:
#    name: predict_eth
#    description: predict ETH volume using recent OHLCV data ("ohlcv" parameter)
#    image: tensorflow/tensorflow:1.13.1-py3
#    wsgi: predict_wsgi:predict_wsgi
#    files:
#      - name: model
#        description: Trained model
#        path: model.pb
#- endpoint:
#    name: predict_xrp
#    description: predict XRP volume using recent OHLCV data ("ohlcv" parameter)
#    image: tensorflow/tensorflow:1.13.1-py3
#    wsgi: predict_wsgi:predict_wsgi
#    files:
#      - name: model
#        description: Trained model
#        path: model.pb
#- endpoint:
#    name: predict_ltc
#    description: predict LTC volume using recent OHLCV data ("ohlcv" parameter)
#    image: tensorflow/tensorflow:1.13.1-py3
#    wsgi: predict_wsgi:predict_wsgi
#    files:
#      - name: model
#        description: Trained model
#        path: model.pb
